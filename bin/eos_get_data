#! /usr/bin/env python3

from pathlib import Path
from typing import List

import numpy as np
import pandas as pd
import typer
from ase.io import read
from rich import print as echo
from rich.progress import track

app = typer.Typer(pretty_exceptions_show_locals=False)


def get_row_from_atoms(atoms) -> dict:
    """compile data in a dict"""
    return {
        "volume": atoms.get_volume(),
        "energy": atoms.get_potential_energy(),
        "pressure": -np.mean(atoms.get_stress()[:3]),
        "N": len(atoms),
    }


@app.command()
def main(
    files: List[Path],
    outfile: str = "eos.csv",
    format: str = "aims-output",
):

    rows = []

    for file in track(files):

        echo(f"... parse {file}")

        if format == "vibes":
            from vibes.trajectory import reader

            atoms = reader(file, verbose=False)[-1]

        else:
            atoms = read(file, format=format)

        row = get_row_from_atoms(atoms)
        rows.append(row)

    df = pd.DataFrame(rows)

    echo(f"... write data to {outfile}")

    df.to_csv(outfile, index=False)


if __name__ == "__main__":
    app()
